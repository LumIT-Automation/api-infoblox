#!/bin/bash

# permissions.csv: group;role;asset;network

CONCERTO_ADDRESS="172.28.0.62"
LOCAL_ADMIN_PASSWORD="password"

###########################################

JWT_TOKEN=$(curl --insecure --location --request POST "https://${CONCERTO_ADDRESS}/auth/api/v1/token/" --header "Content-Type: application/json" --data-raw "{\"username\": \"admin@automation.local\",\"password\": \"${LOCAL_ADMIN_PASSWORD}\"}" 2>/dev/null | grep -oP '(?<="access":").*(?="})')

#echo "Obtained token: ${JWT_TOKEN}"

if [ "${JWT_TOKEN}" != "" ]; then
    while read -r line; do
        if [ "$line" != "" ]; then
            ARGS=()
            IFS=";" read -r -a ARGS <<< "$line"

            GROUP="${ARGS[0]}"
            ROLE="${ARGS[1]}"
            ASSET="${ARGS[2]}"
            NETWORK="${ARGS[3]}"

            GROUP_NAME="$(echo ${GROUP} | grep -oP '(?<==)([^,]+)(?=,)' | head -1)"

            echo -n "* Processing: ${GROUP} (${GROUP_NAME}): role ${ROLE} on ${NETWORK} of asset ${ASSET}... "

            wget --no-check-certificate --no-check-certificate --quiet \
                --method POST \
                --timeout=10 \
                --header "Authorization: Bearer ${JWT_TOKEN}" \
                --header 'Content-Type: application/json' \
                --body-data "{
                    \"data\": {
                        \"name\": \"${GROUP_NAME}\",
                        \"identity_group_identifier\": \"${GROUP}\"
                    }
                }" \
                "https://${CONCERTO_ADDRESS}/backend/infoblox/identity-groups/" || true

            wget --no-check-certificate --no-check-certificate --quiet \
                --method POST \
                --timeout=0 \
                --header "Authorization: Bearer ${JWT_TOKEN}" \
                --header 'Content-Type: application/json' \
                --body-data "{
                    \"data\": {
                        \"identity_group_name\": \"${GROUP_NAME}\",
                        \"identity_group_identifier\": \"${GROUP}\",
                        \"role\": \"${ROLE}\",
                        \"network\": {
                            \"name\": \"${NETWORK}\",
                            \"id_asset\": \"${ASSET}\"
                        }
                    }
                }" \
                "https://${CONCERTO_ADDRESS}/backend/infoblox/permissions/"

            if [ $? -eq 0 ]; then
                echo " done."
            else
                echo " error (already existent permission?)."
            fi
        fi
    done <<< "$(cat permissions.csv)"
else
    echo "Guru Meditation #401"
fi
